    // Prometheus 1.10
    //   Prometheus Operator 介绍
Operator
Prometheus
Prometheus Server
ServiceMonitor
Service
Alertmanager

    //   环境、软件准备
// Docker: 17.09.0-ce
// Oracle VirtualBox: 5.1.20 r114628 (Qt5.6.2)
Minikube: v0.28.2
Helm: v2.8.0
Kubernetes: v1.10.0
Kubectl: 
Client Version: v1.10.0
Server Version: v1.10.0


    //   相关镜像准备
Required_list
// 只需获取镜像最后一层和 tag，其他部分修改为 huwanyang168/ 开头即可

docker pull huwanyang168/kube-state-metrics:v1.3.1
docker tag huwanyang168/kube-state-metrics:v1.3.1 k8s.gcr.io/kube-state-metrics:v1.3.1

docker pull  huwanyang168/prometheus-operator:v0.19.0
docker tag huwanyang168/prometheus-operator:v0.19.0 quay.io/coreos/prometheus-operator:v0.19.0


    //   Minikube 升级并配置
// Kubernetes v1.7.5 不法适用本文档
// Prometheus Operator 版本 >=0.18.0 需要依赖 Kubernetes 版本 >=1.8.0

    //     Minikube 升级
minikube stop
minikube delete
sudo rm -f /usr/local/bin/minikube

curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.28.2/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
// 或
curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/v0.28.2/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

    //     Kubectl 升级
// brew upgrade kubectl

    //     Kubernetes 集群创建
// 使用默认的配置创建 Kubernetes 集群
minikube start --vm-driver=virtualbox --registry-mirror=https://registry.docker-cn.com
kubectl get pods --all-namespaces

    //   Prometheus Operator 部署
https://github.com/camilb/prometheus-kubernetes
git clone https://github.com/camilb/prometheus-kubernetes.git
cd prometheus-kubernetes
./deploy
// provider 镜像选择
// Grafana administrator 用户名和密码
// 提前下载好所需镜像

// alertmanager-main 指定的资源类型为 Alertmanager
kind: Alertmanager

// prometheus-k8s 指定的资源类型为 Prometheus
kind: Prometheus

// 各服务监控资源类型 ServiceMonitor
kind: ServiceMonitor

// 自定义资源 Custom Resource Definition / CRDs
// Kubernetes 1.7 之后

https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/
https://github.com/kubernetes/sample-controller

kubectl get crd
kubectl get ServiceMonitor -n monitoring
kubectl get svc -n monitoring


    //   使用 Grafana 体验 Kubernetes 集群监控
    //     使用 kubectl port-forward 转发
POD=$(kubectl get pods --namespace=monitoring | grep grafana| cut -d ' ' -f 1)
kubectl port-forward $POD --namespace=monitoring 3000:3000
http://10.64.3.7:3000


// 转发单个服务
POD=$(kubectl get pods --namespace=monitoring | grep prometheus-k8s-0| cut -d ' ' -f 1)
kubectl port-forward $POD --namespace=monitoring 9090:9090

http://10.64.3.7:9090


    //     修改 Service Type 类型为 NodePort
kubectl edit svc grafana -n monitoring

spec:
  clusterIP: 10.106.93.254
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 30077
    port: 3000
    protocol: TCP
    targetPort: web
  selector:
    app: grafana
  sessionAffinity: None
  type: NodePort # 这里将 ClusterIP 修改为 NodePort
status:
  loadBalancer: {}


http://10.64.3.7:30077/

// 修改 prometheus-k8s、alertmanager-main Service Type

    //     通过 Ingress 来暴漏服务
minkube addons enable ingress
kubectl get pods --all-namespaces

docker pull huwanyang168/defaultbackend:1.4
docker tag huwanyang168/defaultbackend:1.4 k8s.gcr.io/defaultbackend:1.4
docker pull huwanyang168/nginx-ingress-controller:0.16.2
docker tag huwanyang168/nginx-ingress-controller:0.16.2 quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.16.2

 // Ingress controller 缺少认证
// 下载最新版 yaml 
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/mandatory.yaml

kubectl get pods -n ingress-nginx

// Ingress 规则
vi my-local-ingress.yaml
// 针对 grafana、prometheus-k8s、alertmanager-main Service

kubectl create -f my-local-ingress.yaml

minikube ip
192.168.99.100
echo "192.168.99.100 grafana.minikube.com prometheus.minikube.local.com alertmanager.minikube.local.com" >> /etc/hosts

// 文件打包的话, 可以试一下, 要一个个下载,兴趣不大

// https://blog.csdn.net/lanwp5302/article/details/87859287
// 可以参考,用途不大 毕竟1.6.2不维护了

quay.io/coreos/prometheus-operator:v0.11.3
quay.io/coreos/grafana-watcher:v0.0.6
grafana/grafana:4.4.1
quay.io/prometheus/alertmanager:v0.7.1
quay.io/coreos/kube-state-metrics:v0.5.0
quay.io/prometheus/node-exporter:v0.14.0
quay.io/coreos/config-reloader:v0.0.1
quay.io/coreos/prometheus-config-reloader:v0.0.2
quay.io/prometheus/prometheus:v1.7.0



https://blog.csdn.net/hxpjava1/article/details/80406222
// 自定义Metrics：让Prometheus监控你的应用程序（Spring版）
http://ylzheng.com/2018/01/24/use-prometheus-monitor-your-spring-boot-application/

// 这个才是重要方向
// 除了 官方以及第三方Exporters 之外
